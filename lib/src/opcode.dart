/* This is free and unencumbered software released into the public domain. */

/// Opcodes
class Opcode {
  static const int UNREACHABLE = 0x00;
  static const int NOP = 0x01;
  static const int BLOCK = 0x02;
  static const int LOOP = 0x03;
  static const int IF = 0x04;
  static const int ELSE = 0x05;
  static const int END = 0x0B;
  static const int BR = 0x0C;
  static const int BR_IF = 0x0D;
  static const int BR_TABLE = 0x0E;
  static const int RETURN = 0x0F;
  static const int CALL = 0x10;
  static const int CALL_INDIRECT = 0x11;
  static const int DROP = 0x1A;
  static const int SELECT = 0x1B;
  static const int GET_LOCAL = 0x20;
  static const int SET_LOCAL = 0x21;
  static const int TEE_LOCAL = 0x22;
  static const int GET_GLOBAL = 0x23;
  static const int SET_GLOBAL = 0x24;
  static const int I32_LOAD = 0x28;
  static const int I64_LOAD = 0x29;
  static const int F32_LOAD = 0x2A;
  static const int F64_LOAD = 0x2B;
  static const int I32_LOAD8_S = 0x2C;
  static const int I32_LOAD8_U = 0x2D;
  static const int I32_LOAD16_S = 0x2E;
  static const int I32_LOAD16_U = 0x2F;
  static const int I64_LOAD8_S = 0x30;
  static const int I64_LOAD8_U = 0x31;
  static const int I64_LOAD16_S = 0x32;
  static const int I64_LOAD16_U = 0x33;
  static const int I64_LOAD32_S = 0x34;
  static const int I64_LOAD32_U = 0x35;
  static const int I32_STORE = 0x36;
  static const int I64_STORE = 0x37;
  static const int F32_STORE = 0x38;
  static const int F64_STORE = 0x39;
  static const int I32_STORE8 = 0x3A;
  static const int I32_STORE16 = 0x3B;
  static const int I64_STORE8 = 0x3C;
  static const int I64_STORE16 = 0x3D;
  static const int I64_STORE32 = 0x3E;
  static const int CURRENT_MEMORY = 0x3F;
  static const int GROW_MEMORY = 0x40;
  static const int I32_CONST = 0x41;
  static const int I64_CONST = 0x42;
  static const int F32_CONST = 0x43;
  static const int F64_CONST = 0x44;
  static const int I32_EQZ = 0x45;
  static const int I32_EQ = 0x46;
  static const int I32_NE = 0x47;
  static const int I32_LT_S = 0x48;
  static const int I32_LT_U = 0x49;
  static const int I32_GT_S = 0x4A;
  static const int I32_GT_U = 0x4B;
  static const int I32_LE_S = 0x4C;
  static const int I32_LE_U = 0x4D;
  static const int I32_GE_S = 0x4E;
  static const int I32_GE_U = 0x4F;
  static const int I64_EQZ = 0x50;
  static const int I64_EQ = 0x51;
  static const int I64_NE = 0x52;
  static const int I64_LT_S = 0x53;
  static const int I64_LT_U = 0x54;
  static const int I64_GT_S = 0x55;
  static const int I64_GT_U = 0x56;
  static const int I64_LE_S = 0x57;
  static const int I64_LE_U = 0x58;
  static const int I64_GE_S = 0x59;
  static const int I64_GE_U = 0x5A;
  static const int F32_EQ = 0x5B;
  static const int F32_NE = 0x5C;
  static const int F32_LT = 0x5D;
  static const int F32_GT = 0x5E;
  static const int F32_LE = 0x5F;
  static const int F32_GE = 0x60;
  static const int F64_EQ = 0x61;
  static const int F64_NE = 0x62;
  static const int F64_LT = 0x63;
  static const int F64_GT = 0x64;
  static const int F64_LE = 0x65;
  static const int F64_GE = 0x66;
  static const int I32_CLZ = 0x67;
  static const int I32_CTZ = 0x68;
  static const int I32_POPCNT = 0x69;
  static const int I32_ADD = 0x6A;
  static const int I32_SUB = 0x6B;
  static const int I32_MUL = 0x6C;
  static const int I32_DIV_S = 0x6D;
  static const int I32_DIV_U = 0x6E;
  static const int I32_REM_S = 0x6F;
  static const int I32_REM_U = 0x70;
  static const int I32_AND = 0x71;
  static const int I32_OR = 0x72;
  static const int I32_XOR = 0x73;
  static const int I32_SHL = 0x74;
  static const int I32_SHR_S = 0x75;
  static const int I32_SHR_U = 0x76;
  static const int I32_ROTL = 0x77;
  static const int I32_ROTR = 0x78;
  static const int I64_CLZ = 0x79;
  static const int I64_CTZ = 0x7A;
  static const int I64_POPCNT = 0x7B;
  static const int I64_ADD = 0x7C;
  static const int I64_SUB = 0x7D;
  static const int I64_MUL = 0x7E;
  static const int I64_DIV_S = 0x7F;
  static const int I64_DIV_U = 0x80;
  static const int I64_REM_S = 0x81;
  static const int I64_REM_U = 0x82;
  static const int I64_AND = 0x83;
  static const int I64_OR = 0x84;
  static const int I64_XOR = 0x85;
  static const int I64_SHL = 0x86;
  static const int I64_SHR_S = 0x87;
  static const int I64_SHR_U = 0x88;
  static const int I64_ROTL = 0x89;
  static const int I64_ROTR = 0x8A;
  static const int F32_ABS = 0x8B;
  static const int F32_NEG = 0x8C;
  static const int F32_CEIL = 0x8D;
  static const int F32_FLOOR = 0x8E;
  static const int F32_TRUNC = 0x8F;
  static const int F32_NEAREST = 0x90;
  static const int F32_SQRT = 0x91;
  static const int F32_ADD = 0x92;
  static const int F32_SUB = 0x93;
  static const int F32_MUL = 0x94;
  static const int F32_DIV = 0x95;
  static const int F32_MIN = 0x96;
  static const int F32_MAX = 0x97;
  static const int F32_COPYSIGN = 0x98;
  static const int F64_ABS = 0x99;
  static const int F64_NEG = 0x9A;
  static const int F64_CEIL = 0x9B;
  static const int F64_FLOOR = 0x9C;
  static const int F64_TRUNC = 0x9D;
  static const int F64_NEAREST = 0x9E;
  static const int F64_SQRT = 0x9F;
  static const int F64_ADD = 0xA0;
  static const int F64_SUB = 0xA1;
  static const int F64_MUL = 0xA2;
  static const int F64_DIV = 0xA3;
  static const int F64_MIN = 0xA4;
  static const int F64_MAX = 0xA5;
  static const int F64_COPYSIGN = 0xA6;
  static const int I32_WRAP_I64 = 0xA7;
  static const int I32_TRUNC_S_F32 = 0xA8;
  static const int I32_TRUNC_U_F32 = 0xA9;
  static const int I32_TRUNC_S_F64 = 0xAA;
  static const int I32_TRUNC_U_F64 = 0xAB;
  static const int I64_EXTEND_S_I32 = 0xAC;
  static const int I64_EXTEND_U_I32 = 0xAD;
  static const int I64_TRUNC_S_F32 = 0xAE;
  static const int I64_TRUNC_U_F32 = 0xAF;
  static const int I64_TRUNC_S_F64 = 0xB0;
  static const int I64_TRUNC_U_F64 = 0xB1;
  static const int F32_CONVERT_S_I32 = 0xB2;
  static const int F32_CONVERT_U_I32 = 0xB3;
  static const int F32_CONVERT_S_I64 = 0xB4;
  static const int F32_CONVERT_U_I64 = 0xB5;
  static const int F32_DEMOTE_F64 = 0xB6;
  static const int F64_CONVERT_S_I32 = 0xB7;
  static const int F64_CONVERT_U_I32 = 0xB8;
  static const int F64_CONVERT_S_I64 = 0xB9;
  static const int F64_CONVERT_U_I64 = 0xBA;
  static const int F64_PROMOTE_F32 = 0xBB;
  static const int I32_REINTERPRET_F32 = 0xBC;
  static const int I64_REINTERPRET_F64 = 0xBD;
  static const int F32_REINTERPRET_I32 = 0xBE;
  static const int F64_REINTERPRET_I64 = 0xBF;
}
